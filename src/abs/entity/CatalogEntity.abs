module MCatalogItemEntity;
export *;

import CatalogItem, CatalogItemImpl from MCatalogItemModel;
import CatalogItemDb, CatalogItemDbImpl from MCatalogItemDbImpl;
import CatalogItemFilter, CatalogItemFilterImpl from MCatalogItemFilter;
import SQLHelper, SQLHelperImpl from ABS.Framework.SQL;

interface CatalogItemEntity {
    List<CatalogItem> findCatalogItems(String whereClauseInString);
    List<CatalogItem> findAllCatalogItem();
    CatalogItem findById(String id);
    List<CatalogItem> listFilterById(CatalogItemFilter filter);
    String appendAllWhereClause(List<String> whereClause);

    /* Where Clause Function, Please find better implementation to extract these methods into Delta */
    List<String> whereClauseBrand(CatalogItemFilter filter, List<String> whereClause);
    List<String> whereClauseType(CatalogItemFilter filter, List<String> whereClause);
    List<String> whereClauseCategories(CatalogItemFilter filter, List<String> whereClause);
    List<String> whereClauseTag(CatalogItemFilter filter, List<String> whereClause);

}

class CatalogItemEntityImpl implements CatalogItemEntity {
    
    List<String> whereClauseBrand(CatalogItemFilter filter, List<String> whereClause){
        println("Base Implementation of Where Brand");
        return whereClause;
    
    }
    
    List<String> whereClauseType(CatalogItemFilter filter, List<String> whereClause){
        println("Base Implementation of Where Type");
        return whereClause;
    
    }
    
    List<String> whereClauseCategories(CatalogItemFilter filter, List<String> whereClause){
    
        return whereClause;
    
    }

    List<String> whereClauseTag(CatalogItemFilter filter, List<String> whereClause){
    
        return whereClause;
    
    }

    String appendAllWhereClause(List<String> whereClause){

        Int size = length(whereClause);
        Int count = 0;
        String conditions = "";

        while(count < size) {
            String condition = nth(whereClause, count);
            conditions = conditions + condition;
            count = count +1;

            if (count < size) {
                conditions = conditions + " AND ";
            }
            println(conditions);
        }


        return conditions;

    }

    List<CatalogItem> findCatalogItems(String whereClauseInString) {
        CatalogItemDb orm = new local CatalogItemDbImpl();
        SQLHelper sqlHelper = new local SQLHelperImpl();

        return orm.findAllByAttributes("MCatalogItemModel.CatalogItemImpl_c", whereClauseInString);
        
    }

    List<CatalogItem> listFilterById(CatalogItemFilter filter){
        
        List<String> whereClause = Nil;
        Int id = filter.getId();

        if (id != 0) {
            String idStr = toString(id);
            String condition = "id = " + idStr;
            whereClause = appendright(whereClause, condition);
        }

        String conditions = this.appendAllWhereClause(whereClause);

        return this.findCatalogItems(conditions);

    }

    List<CatalogItem> findAllCatalogItem() {
        CatalogItemDb orm = new local CatalogItemDbImpl();
        return orm.findAll("MCatalogItemModel.CatalogItemImpl_c");
    }

    CatalogItem findById(String id) {
        String condition = "id=" + id;
        CatalogItemDb orm = new local CatalogItemDbImpl();
        return orm.findByAttributes("MCatalogItemModel.CatalogItemImpl_c",condition);
    }

}