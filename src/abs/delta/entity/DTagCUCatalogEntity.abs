delta DTagCUCatalogEntity;
uses MCatalogItemEntity;

modifies interface CatalogItemEntity {
	
	removes List<CatalogItem> saveCatalogItem(String name, String description, Int price, String pictureURL, Int availableStock, String categories);
    
    removes CatalogItem updateCatalogItem(String id, String name, String description, Int price, String pictureURL, Int availableStock, String categories);

	adds List<CatalogItem> saveCatalogItem(String name, String description, Int price, String pictureURL, Int availableStock, String categories, String imageURL1, String imageURL2, String tagString);

    adds CatalogItem updateCatalogItem(String id, String name, String description, Int price, String pictureURL, Int availableStock, String categories, String imageURL1, String imageURL2, String tagString);
}

modifies class CatalogItemEntityImpl {
	
	removes List<CatalogItem> saveCatalogItem(String name, String description, Int price, String pictureURL, Int availableStock, String categories);
    
    removes CatalogItem updateCatalogItem(String id, String name, String description, Int price, String pictureURL, Int availableStock, String categories);

	adds List<CatalogItem> saveCatalogItem(String name, String description, Int price, String pictureURL, Int availableStock, String categories, String imageURL1, String imageURL2, String tagString){

		CatalogItem catalogItem = new local CatalogItemImpl();
        CatalogItemDb orm = new local CatalogItemDbImpl();
        
        catalogItem.setName(name);
        catalogItem.setDescription(description);
        catalogItem.setPrice(price);
        catalogItem.setPictureURL(pictureURL);
        catalogItem.setAvailableStock(availableStock);
        catalogItem.setCategories(categories);
        catalogItem.setImageURL1(imageURL1);
        catalogItem.setImageURL2(imageURL2);
        catalogItem.setTagString(tagString);
        
        orm.save(catalogItem);
        return this.findAllCatalogItem();

	}

    adds CatalogItem updateCatalogItem(String id, String name, String description, Int price, String pictureURL, Int availableStock, String categories, String imageURL1, String imageURL2, String tagString){ 

    	CatalogItem catalogItem = this.findById(id);
        CatalogItemDb orm = new local CatalogItemDbImpl();
        
        catalogItem.setName(name);
        catalogItem.setDescription(description);
        catalogItem.setPrice(price);
        catalogItem.setPictureURL(pictureURL);
        catalogItem.setAvailableStock(availableStock);
        catalogItem.setCategories(categories);
        catalogItem.setImageURL1(imageURL1);
        catalogItem.setImageURL2(imageURL2);
        catalogItem.setTagString(tagString);
        
        orm.update(catalogItem);
        return this.findById(id);

    }
	
}