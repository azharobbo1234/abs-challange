delta DTransferService;
uses MAccountService;

modifies interface AccountService {
    adds Unit transfer(String sender_id, String receiver_id, Int amount);
    
    removes Account create(Int balance, String rekening, Int customerId);
    adds Account create(Int balance, String rekening, Int customerId, Int bankId);

    removes Account update(String id, Int balance, String rekening, Int customerId);
    adds Account update(String id, Int balance, String rekening, Int customerId, Int bankId);
}

modifies class AccountServiceImpl {
    adds Unit transfer(String sender_id, String receiver_id, Int amount) {

        AccountDb orm = new local AccountDbImpl();
		String sender_condition = "id=" + sender_id;
        String receiver_condition = "id=" + receiver_id;

        Account sender = orm.findByAttributes("MAccountModel.AccountImpl_c", sender_condition);
        Account receiver = orm.findByAttributes("MAccountModel.AccountImpl_c", receiver_condition);

        Int senderBankId = sender.getBankId();
        Int receiverBankId = receiver.getBankId();

        if (senderBankId == receiverBankId) {
            sender.withdraw(amount);
            orm.update(sender);
            receiver.deposit(amount);
            orm.update(receiver);
        }
    }

    removes Account create(Int balance, String rekening, Int customerId);
    adds Account create(Int balance, String rekening, Int customerId, Int bankId){

		AccountDb orm = new local AccountDbImpl();

		Account a = new local AccountImpl();
		a.setBalance(balance);
		a.setRekening(rekening);
		a.setCustomerId(customerId);
        a.setBankId(bankId);
		orm.save(a);
		return a;
	}

    removes Account update(String id, Int balance, String rekening, Int customerId);
    adds Account update(String id, Int balance, String rekening, Int customerId, Int bankId){

		AccountDb orm = new local AccountDbImpl();
		String condition = "id=" + id;

		Account a = orm.findByAttributes("MAccountModel.AccountImpl_c",condition);

		a.setBalance(balance);
		a.setRekening(rekening);
		a.setCustomerId(customerId);
        a.setBankId(bankId);
		orm.update(a);

		return a;
	}
}